{
  "swagger": "2.0",
  "info": {
    "description": "Auto Mart is an online market place for automobile of diverse make, model or body type. With Auto Mart, users can sell or buy from trusted dealerships of private sellers",
    "version": "1.0.0",
    "title": "AutoMart",
    "contact": {
      "email": "owhiroroeghele@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/cleave3/AutoMart/blob/develop/LICENSE"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "users",
      "description": "Users can be buyer or seller"
    },
    {
      "name": "cars",
      "description": "Cars can be new or old"
    },
    {
      "name": "orders",
      "description": "Orders made by buyers"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "Register a new user to the app",
        "operationId": "signup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created"
          },
          "400": {
            "description": "Missing required field"
          },
          "409": {
            "description": "Email already exist"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid email/password supplied"
          }
        }
      }
    },
    "/car": {
      "post": {
        "tags": [
          "cars"
        ],
        "summary": "Create a new car Ad",
        "description": "Post a new car Ad",
        "operationId": "postCar",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "state",
            "in": "formData",
            "description": "state can be new or used",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "description": "Price of car",
            "required": true,
            "type": "number"
          },
          {
            "name": "manufacturer",
            "in": "formData",
            "description": "Car manufacturer",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "formData",
            "description": "Car model",
            "required": true,
            "type": "string"
          },
          {
            "name": "body_type",
            "in": "formData",
            "description": "Car body type",
            "required": true,
            "type": "string"
          },
          {
            "name": "transmission_type",
            "in": "formData",
            "description": "Car transmission type",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "More details of car",
            "required": false,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "image to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Ads successfully created"
          },
          "400": {
            "description": "Missing or invalid field parameter"
          },
          "403": {
            "description": "Authentication failed"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "View cars by different query parameters",
        "description": "search using appropriate parameters e.g status or min_price and max_price or manufacturer. For Admin view all, search without query",
        "operationId": "getAll, getUnsoldCars, getUnsoldCarsByPrice, getUnsoldCarsByManufacturer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "description": "status should be 'available'",
            "required": false
          },
          {
            "in": "query",
            "name": "min_price",
            "type": "number",
            "description": "minimum price",
            "required": false
          },
          {
            "in": "query",
            "name": "max_price",
            "type": "string",
            "description": "maximum price",
            "required": false
          },
          {
            "in": "query",
            "name": "manufacturer",
            "type": "string",
            "description": "car make",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Ads successfully created"
          },
          "400": {
            "description": "Missing or invalid field parameter"
          },
          "401": {
            "description": "Unathorized access"
          },
          "403": {
            "description": "Authentication failed"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/owner/car": {
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "Find car by user",
        "description": "Returns a cars posted a particular user",
        "operationId": "getCarsByUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/car/{carId}": {
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "Find car by ID",
        "description": "Returns a single car",
        "operationId": "getACar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Car not found"
          }
        }
      },
      "delete": {
        "tags": [
          "cars"
        ],
        "summary": "Delete a car Ad",
        "description": "Returns an object",
        "operationId": "deleteCarAd",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/car/{carId}/status": {
      "patch": {
        "tags": [
          "cars"
        ],
        "summary": "Mark car as sold",
        "description": "Updates a single car status",
        "operationId": "updateCarStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/car/{carId}/price": {
      "patch": {
        "tags": [
          "cars"
        ],
        "summary": "Update specific car",
        "description": "Updates a single car",
        "operationId": "updateCarPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/price"
            },
            "description": "status can be available or sold",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/order": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create user",
        "description": "Register a new user to the app",
        "operationId": "makeOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created order object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Car not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/order/{orderId}/price": {
      "patch": {
        "tags": [
          "orders"
        ],
        "summary": "Update offer price",
        "description": "Update offer price",
        "operationId": "updateOrderPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "type": "string"
          },
          {
            "name": "offer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/offer"
            },
            "description": "update price offered",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/buyer/order": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Find order by user",
        "description": "Returns a orders posted a particular user",
        "operationId": "getOrdersByUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "definitions": {
    "users": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "orders": {
      "type": "object",
      "properties": {
        "carId": {
          "type": "string"
        }
      }
    },
    "price": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number"
        }
      }
    },
    "offer": {
      "type": "object",
      "properties": {
        "offer": {
          "type": "number"
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header"
    }
  }
}